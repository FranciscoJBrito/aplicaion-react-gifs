{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","assets/favicon.png","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_large","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categorias","favicon","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OAExCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,QAsBhBG,YAAY,mC,+BC7BfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGKI,MAAOF,GAHZ,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,gBAAgBZ,QAXtB,kBAebM,GAfa,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,qBAAKc,UAAU,OAAf,SACI,sBAAKA,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,UCDPO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECLwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAE/BsB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAGZ,CAAEpB,IAGEqB,EDpB0BM,CAAc3B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACI,uBACA,oBAAIJ,UAAU,KAAd,SAAqBhB,IAEpBoB,GAAW,mBAAGJ,UAAU,0CAAb,yBAEZ,qBAAKA,UAAU,OAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEvBnB,MAA0B,oCCyC1BiB,EAnCM,WAEjB,MAAoC3C,mBAAS,CAAC,YAAa,cAAe,SAAU,eAApF,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACI,qCACI,sBAAKgC,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAUC,IAAKa,EAASZ,IAAI,SAC3C,kDAGJ,cAAC,EAAD,CAAalC,cAAgBA,IAE7B,uBAGQ6C,EAAWpB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,U,MCxBjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8fb3ceb.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategorias} ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n\r\n            setCategorias( cats => [ inputValue, ...cats,] );\r\n            \r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n                placeholder='Buscar serie o personaje...'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired,\r\n}","export const getGifs = async( category )=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=c4Vym44lU4efaJHVI8Mt6xTa4LPkAJvG`;\r\n    const respuesta = await fetch( url );\r\n    const {data} = await respuesta.json();\r\n\r\n\r\n    const gifs = data.map( img  =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_large.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}\r\n\r\n//export default getGifs;","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className='grid'>\r\n            <div className='card animate__animated animate__fadeIn'>\r\n                <img src={url} alt={title}/>\r\n                <p>{title}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\n\r\nexport const GiftGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <h3 className='h3'>{ category }</h3>\r\n\r\n            {loading && <p className='loader animate__animated animate__flash'>Cargando...</p>}\r\n\r\n            <div className='grid'>\r\n            { \r\n                images.map( img => ( \r\n                    <GifGridItem \r\n                        key ={img.id}\r\n                        { ...img }\r\n                    />\r\n                ) )\r\n            }\r\n\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout( () => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    });                    \r\n\r\n                }, 2000);\r\n                \r\n            })\r\n    }, [ category ]);\r\n\r\n\r\n    return state;\r\n\r\n}","export default __webpack_public_path__ + \"static/media/favicon.efdc5d5c.png\";","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\nimport favicon from './assets/favicon.png';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['One Punch', 'Dragon Ball', 'Naruto', 'Scooby Doo',]);\r\n/*     const handleAdd = ()=>{\r\n        setCategorias( [...categorias, 'HunnterxHunter'] );\r\n        setCategorias(cats => [...cats, 'HunnterxHunter']);\r\n    }\r\n */\r\n    return(\r\n        <>\r\n            <div className='logo'>\r\n                <img className='favicon' src={favicon} alt='logo'/>\r\n                <h1>if Expert App</h1>\r\n            </div>\r\n\r\n            <AddCategory setCategorias={ setCategorias }/> \r\n\r\n            <hr/>\r\n\r\n                {\r\n                    categorias.map( category => (   \r\n                        \r\n                        <GiftGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    \r\n                    ))\r\n                }\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}